#!/usr/bin/env python
# coding: utf-8

# In[1]:


import quandl
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import datetime

from sklearn.model_selection import train_test_split
from sklearn import preprocessing
from sklearn.linear_model import LinearRegression


# In[2]:


quandl.ApiConfig.api_key = 'zv4JTecbQTW_5Y3n89ch'

df = quandl.get("WIKI/AMZN")
df = df[['Adj. Close']]


# In[3]:


df['Adj. Close'].plot(figsize=(15, 9), color='g')
plt.legend(loc='upper left')
plt.show()


# In[4]:


forecast = 30
df['Prediction'] = df[['Adj. Close']].shift(-forecast)

#Set mean and standard deviation
x = np.array(df.drop(['Prediction'], 1))
x = preprocessing.scale(x)

x_forecast = x[-forecast:]
x = x[:-forecast]

y = np.array(df['Prediction'])
y = y[:-forecast]


# In[5]:


x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2)

clf = LinearRegression()
clf.fit(x_train, y_train)

confidence = clf.score(x_test, y_test)

forecast_predicted = clf.predict(x_forecast)
print(forecast_predicted)


# In[6]:


dates = pd.date_range(start="2018-03-28", end="2018-04-26")
plt.plot(dates, forecast_predicted, color='y')
df['Adj. Close'].plot(color='g')
plt.xlim(xmin=datetime.date(2017, 4, 26))
